apiVersion: v1
kind: Secret
metadata:
  name: {{ include "olc-rest-proxy.fullname" . }}-secret
type: Opaque
stringData:
  SPRING_DATASOURCE_USERNAME: {{ .Values.secret.SPRING_DATASOURCE_USERNAME | quote }}
  SPRING_DATASOURCE_PASSWORD: {{ .Values.secret.SPRING_DATASOURCE_PASSWORD | quote }}
---
apiVersion: v1
data:
  tls.crt: >-
    
  tls.key: >-
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUcvUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQnVjd2dnYmpBZ0VBQW9JQmdRRFJNODhrS2hiWkNicC8KNHNEZDB6dzNuYUJtNG5rZGlCYnFhbVlCTDkyM25YTWUya2ViVXdVMFdMOSsvc0Q0VlpvczRZbnVEMFZleXBCVgpaN0dDVXZ1RHhDdm0vUk8yODNDMTcwajZmMVBtRUt6NFFYdWIyeTVDUjUyd01zemFiN2VteGJVWEU5RjFjU0xjClR0RzRSZFYwaDdxNUZiOVNUQ09QWVBTeWM0TGF3RzdJcUJvdmtaRE5DU1Vkc2I0b3F6WHhlVnZQSTBVZEpZTUYKQXYzaGF3UWxteThqWWszVjBJM1NTK1RaU3B1dEVHalR5R3VWbVV5b2RsZW1NNGE5S1hQMk9aQmtlYmhPdThiMwpKbzY1cUVEWmwvNEdkeGdPcUJkS0lmZEMvY2Uzc2wxTExtd0JBc3N3TnRrM1kwS240Smh0VzFwNk1XOFM5Y1BLCnNYcUREbkI4UW5rZjNCS2ZBUzZBZDEwNURrdVM4bGtEUU5uY3NubllQNnlFaXhCUlhOajN3R1c5NUlSbElHZTIKY3pQMjJZaksrZVFjcGw5cE5hQkhQa1MwcUQ0SnBtQ3FQcWZZQTNaRzV0QWRUbXpFRk1CM0I4NExGajFZYWRJYwpCQUUyOG8vQjc2TzBMNXVQb3AxbzRIem9va2lzUEdPSm5RaVI5QmxmNUdLMmtBRTRJTTBDQXdFQUFRS0NBWDgvCmNYYlVtQjJiaGVObVdZeUEvd0xtOGl4dEJ5by9iV01vbkw2dm5YZHhUd2l4eHZVSG1pWExYUjYxOEYyc1puZisKRFNJa1ZjTVEvQzdKV3FrR0lxLzFkSEZRVmZ0SGdGM0ZXcDFTenI3Ulk3R2NyMVp3SERiVDR1UWQvNmNKSXpWSgpBVGZwOWtjeVAwdkhoQis0cTBadHMzWUVUamI5RzEvYjdQKzh3WG1ueGloZVZNc1FpcmVOcFRoV2d6T3pyVS9GCjYyVURtdlJ5RU80Mmx1QTQ4TWNMV3I3Q1dXcTF5aXgrSmN2TTFCbEt2OTNFdVdCRUxKYUhPbk8zWitqcEY5Y3AKZS9TaUtPVUN6S3lBQWpLZGZrTm1MdlRDdHBTZFovNXZWUDBYY3UxOW5sR2laVHBQWGZoRmhPbWhGdWFHazB2TgowRHQ2N3lwaWZZeGJBUm0yU0wwME5lb0RPZ3NCQkk3RDFJMTViSFFscHdNWTFSSHlaUHdYVGtZM0ovZmg3RzBNCmwzdUtGYXpmV0ZGb0VsYm1GempkYWRBVUNDQVVoSEI1NkVGWHVCclNOTGhEQ3RWSmx3dm9lR2ZKeU9KQXdjWUwKWTlWMlFwdDgzWmJvdFJ4NUdLWnFHd1RxM1V6K2h3SHVodzNxQjFwRHdrNjMrV1VnZUc0SmlHSFVTTW01UVFLQgp3UUR2QkpMeHhpVXVtcWZGWVpiVEJmSHNENFc2VXZHei9CR1lpNkFoUENyZExNOVg5S2FqVnJsandOazRXV3d6Cnc2eUcvdHZvOG5KSzFYc2ZYR3kxc3JlbWVzVTBQYWNTOFdrYTJoZ0JPTWhVUS9NdGRIUE9NYjdyclpGR0JUOGcKWDFaUWg3WjlENjhQaW4yVUlUWGlLOXMybjk1WVN4cW9HUnRHR2E5U1JoVmhpYXZ6QzF5YkJsL25JQVNUM0YvOApiNTZnMWp5WmhKQVFKNk1ON0M3M3oyMVZFRkxGekozdEpmWlZCQzJLKy81dDFCL1ZrRkswRkhhSHh4b2UrVFloClRDa0NnY0VBNEJEdUVtVmtzdE1GN1BpZ0hHbDBKMm5yNUZCS0pNSC9CZklyeEpYSWhNbFVkZmRndDNCa2hzMDUKWEk3OFMwWkcraFdoUlhTZFRjSEhZUGVGdnBuSTZXNUlkNzZjakNreW9PTkVnM1FHd2pwMmpKR3hiVEllQzJOVwpZTWFQYWsxdUR5NkpwbUZRcmZNZEE2aVFLZ3JPWm4yTzhBa1BvR3FMVWlMRmJBOXlhb2p2dWNpUVM4ZlRycldTCjdZbzJuM1pIOWxRa2hIR3NVSmRjdzE4WlM2U0c5aEpZV1h5bWthclBoK2R5ZXcxdDJRU25jdmlORUsySnlkbGEKU0thK2VRUUZBb0hBQVVtVUJRdGRMZWdWV1VIU1R5YXNDK3AxZlBCdmJ0bS91b09lQkMvUHgwc3pmclRKcFAyVgptQXowM3BIVXZGNmtja0d6SzRrS3hvNXAwRnh1RlhoMTlzYVlnMVNGcnR0d0JuNEFQUmx5TXNuKzZGTEZRT29SCnJqRk1KQVZwTnFKczA1ZzNpbXJvTlh3NGV2REcyb1lEODBKZkx6aVFWekZ6YlNnOFFvUXdIMHRmaXJxWDhCblQKc0dvQ3ZFMG1relNDdFRrU01IMS9UU2I1Z055eDBCSGs4OTFYcE1zYVdxbW1yd1NMdmtEbk9PNDRrYXpxVlIvNwpGM1lpRk9LZ3dRTXBBb0hCQUxDd3FRd1lxSy9iZUhER0hueEpMQzlvZDN3elZFUm9OcEtaeGFuZjg1L0NvN2ZpCnU0SHNQMW1OdkE0aE14S28rSTk5UHc5bVJpVnJDYTZOZ2dvcmV5T1lzOHk1b3Zsa0EyaWJ6d3RhRTNwV1grVzUKZmhCOTFQTm1BbGVPUE1tM0JYTXpYNWkwWk1ySFM3bjIwcmhValM2RkZKSjBrcjROUnBBZW0wLzdYbDVrWGFaRApZb1pmcmEyM3dZVlAySU1tNHRoOHdjOHZWSks0eVkzSEVFdDJFbmM1UURKUStZa2xDVUpDWVNSb0VwZHY5QnZWCnBHZmljU1diSUhicUJvbW5nUUtCd1FEcFl1MTRDaE9tWlNzL3FGRFdsREUxdE5hZG1LOFJEbTF5dUVDRW9SMGwKNkcrNHZrYTZaV1NPNU81WmRKdVgwMHhLZU43VklMbFYyY1Q5SjZaN1VFdm9KQlZtSFNtSnVVdWpqVSt5bWw1MgpQbWE1dTQzNWdES0IzVld4amZmTnJzOCtpb2ZqbXo1aVdTL1FrTnpmdFBRaTNRRS9rSUtRMkJOVWtZYllsQmhVClNIZGJ3S3UzM1NkcUtwdVdKeUtRYldpTzNpN2ZwR2RXcXFZTXJqUTJxRnRJWEZvNGQ0aWNsbXc5NjdzSU45ZWYKejNpS0MyU3MxNXVqSnhBTGtQR1pRSkE9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: {{ include "olc-rest-proxy.fullname" . }}-ingress-secret
type: kubernetes.io/tls